import numpy as np

GRAVITY = -9.8
MAX_EPISODE_STEP = 2000
CONTROL_SKIP = 4

# BoxObject2D parameters
BOX_2D_X_LINK = 0
BOX_2D_Y_LINK = 1
BOX_2D_BODY_LINK = 2
BOX_2D_HALF_HEIGHT = 0.25
BOX_2D_NUM_OF_JOINTS = 3

BOX_HALF_LENGTH = 1.
BOX_HALF_WIDTH = 0.5

LONG_BOX_HALF_LENGTH = 6.
LONG_BOX_HALF_WIDTH = 0.5

BOX_MASS = 1.
BOX_INERTIA = 1./6.

BOX_STATE_X = 0
BOX_STATE_Y = 1
BOX_STATE_THETA = 2
BOX_STATE_X_DOT = 3
BOX_STATE_Y_DOT = 4
BOX_STATE_THETA_DOT = 5

# Env parameters
BOX_OBJECT = 0
FINGER_OBJECT = 1

# Action space
ACTION_SPACE_LOW = np.asarray((-np.pi, 0., 0.))
ACTION_SPACE_HIGH = np.asarray((np.pi, 10., 10.))
ACTION_SPACE_DIM = 3

# Distance scaling
DISTANCE_SCALING = np.asarray((1., 1., 10.))

TARGET_P_W = np.asarray((10., 10., 0.25))
TARGET_Q_W = np.asarray((0., 0., 0.707, 0.707))

# Indices
OBJ_POSITION_START = 0
OBJ_POSITION_END = OBJ_POSITION_START+2
OBJ_ORIENT_START = OBJ_POSITION_END
OBJ_ORIENT_END = OBJ_ORIENT_START + 1
OBJ_STATE_DOT_START = OBJ_ORIENT_END
OBJ_STATE_DOT_END = OBJ_STATE_DOT_START + 3
EXT_FORCE_START = OBJ_STATE_DOT_END
EXT_FORCE_END = EXT_FORCE_START + 2
EXT_TORQUE_START = EXT_FORCE_END
EXT_TORQUE_END = EXT_FORCE_START + 1

# For debug visualizations
FORCE_VIS_SCALING = 0.05
FORCE_VIS_COLOR = [[1., 0., 0.], [0., 0., 1.], [0., 1., 0.]]
DISTURBANCE_VIS_SCALING = FORCE_VIS_SCALING*5.
DISTURBANCE_VIS_COLOR = [0., 0., 1.]
HIDDEN_SIZE = 64


class BColors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'
